Error type 2 at Line 6: function should be invoked with a definition.
Error type 7 at Line 6: unmantching operands,such as adding an integer to a structure variable
Program (1)
  ExtDefList (1)
    ExtDef (1)
      Specifier (1)
        TYPE: int
      FunDec (1)
        ID: fact
        LP
        VarList (1)
          ParamDec (1)
            Specifier (1)
              TYPE: int
            VarDec (1)
              ID: n
        RP
      CompSt (2)
        LC
        StmtList (3)
          Stmt (3)
            IF
            LP
            Exp (3)
              Exp (3)
                ID: n
              EQ
              Exp (3)
                INT: 1
            RP
            Stmt (4)
              RETURN
              Exp (4)
                ID: n
              SEMI
            ELSE
            Stmt (6)
              RETURN
              Exp (6)
                LP
                Exp (6)
                  Exp (6)
                    ID: n
                  MUL
                  Exp (6)
                    ID: fact
                    LP
                    Args (6)
                      Exp (6)
                        Exp (6)
                          ID: n
                        MINUS
                        Exp (6)
                          INT: 1
                    RP
                RP
              SEMI
        RC
    ExtDefList (8)
      ExtDef (8)
        Specifier (8)
          TYPE: int
        FunDec (8)
          ID: main
          LP
          RP
        CompSt (9)
          LC
          DefList (10)
            Def (10)
              Specifier (10)
                TYPE: int
              DecList (10)
                Dec (10)
                  VarDec (10)
                    ID: m
                COMMA
                DecList (10)
                  Dec (10)
                    VarDec (10)
                      ID: result
              SEMI
          StmtList (11)
            Stmt (11)
              Exp (11)
                Exp (11)
                  ID: m
                ASSIGN
                Exp (11)
                  ID: read
                  LP
                  RP
              SEMI
            StmtList (12)
              Stmt (12)
                IF
                LP
                Exp (12)
                  Exp (12)
                    ID: m
                  GT
                  Exp (12)
                    INT: 1
                RP
                Stmt (13)
                  Exp (13)
                    Exp (13)
                      ID: result
                    ASSIGN
                    Exp (13)
                      ID: fact
                      LP
                      Args (13)
                        Exp (13)
                          ID: m
                      RP
                  SEMI
                ELSE
                Stmt (15)
                  Exp (15)
                    Exp (15)
                      ID: result
                    ASSIGN
                    Exp (15)
                      INT: 1
                  SEMI
              StmtList (16)
                Stmt (16)
                  Exp (16)
                    ID: write
                    LP
                    Args (16)
                      Exp (16)
                        ID: result
                    RP
                  SEMI
                StmtList (17)
                  Stmt (17)
                    RETURN
                    Exp (17)
                      INT: 0
                    SEMI
          RC
Program
ExtDefList
ExtDef
FunDec
FUNCTION fact :
VarList
ParamDec
VarDec
PARAM v1
ComSt
DefList
StmtList
Stmt
cond_Exp
3
Exp
t1 := v1
Exp
const
INT
0
t2 := #1
IF t1 == t2 GOTO label1
GOTO label2
LABEL label1 :
Stmt
Exp
t3 := v1
RETURN t3
GOTO label3
LABEL label2 :
Stmt
Exp
Exp
Exp
t5 := v1
Exp
Args
Exp
Exp
t8 := v1
Exp
const
INT
0
t9 := #1
t7 := t8 - t9
Args
